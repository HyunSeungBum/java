<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<tx:annotation-driven  />
	
	<!-- enable autowire -->
	<context:annotation-config/>

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/MySQLDS" />
		<property name="resourceRef" value="true" />		
	</bean> 
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- required to connect Slave Server only for get* method on MySQL Replication  -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">    
        <tx:attributes>      
            <tx:method name="*" propagation="REQUIRED"/>     
            <tx:method name="get*" read-only="true"/>    
        </tx:attributes>    
    </tx:advice>    
           
    <aop:config>    
        <aop:pointcut expression="execution (* com.sbhyun.service.*.*(..))" id="services"/>       
        <aop:advisor advice-ref="txAdvice" pointcut-ref="services"/>    
    </aop:config> 

	<!-- 
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" rollback-for="Exception" />
			<tx:method name="update*" rollback-for="Exception" />
			<tx:method name="delete*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>	
	
	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceOperation" expression="execution(public * com.spring..service.*Service.*(..))"/>
		<aop:advisor id="transactionAdvisor" pointcut-ref="serviceOperation" advice-ref="txAdvice" />
	</aop:config> -->
	    
    <bean name="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">  
        <property name="transactionManager" ref="transactionManager" />  
        <property name="isolationLevelName" value="ISOLATION_READ_COMMITTED"/>  
        <property name="timeout" value="30"/>  
    </bean>  
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:sqlMap/*.xml" />
		<property name="configLocation" value="classpath:config/mybatisV3-config.xml"/>
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<context:component-scan base-package="com.sbhyun">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
</beans>
